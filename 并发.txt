不变模式：
    使用场景：
        1、当对象创建后，其内部状态和数据不再发生变化。
        2、对象需要被共享，被多线程频繁访问。

    实现方法：
        1、去除setter方法以及所有修改自身属性的方法。
        2、将所有属性设置为私有，并用final标记，确保其不可修改。
        3、确保没有子类可以重载修改它的行为。
        4、有一个可以创建完整对象的构造函数。


生产者-消费者模式：


    无锁的缓存框架：Disruptor

Future模式：




